from src.setsy import setsy
from setup_logging import logger

if __name__ == "__main__":
    logger.info("demoing setsy class")
    logger.info("set up a setsy named first_setsy containing 3 elements")
    first_setsy = setsy([6, 7, 8])
    logger.info("output the powerset of the first_setsy")
    print('here', list(first_setsy.powerset()))
    logger.info("set up a setsy named second_setsy containing 2 elements, each a set of 2 elements")
    second_setsy = setsy([(1, 2), (1, 3)])
    logger.info("is second_setsy a superset or subset of first_setsy?  we expect not.")
    print(second_setsy.issubset(first_setsy))
    print(second_setsy.issuperset(first_setsy))
    logger.info("now union second setsy with first_setsy")
    second_setsy = second_setsy.union(first_setsy)  # class setsy which inherits from set returns a set from union
    logger.info("what do we get? hint: a setsy containing 2 sets of 2 elements each plus the 3 elements of first_setsy")
    print(second_setsy)
    logger.info("still a setsy.")
    print(type(second_setsy))
    logger.info("let's set up a third setsy called third_setsy")
    third_setsy = {6, 5, 2, 1}
    print('------------')
    logger.info("what is the cartesian set of second_setsy and third_setsy?")
    print(second_setsy.cartesian(third_setsy))
    logger.info("NOW DO A REVIEW OF IS NOT SUBSET")
    logger.info("and a fourth setsy")
    fourth_setsy = setsy([1, 2, 3])
    logger.info("let's get its contents")
    print("a:", fourth_setsy)
    logger.info("redefine first_setsy to be more complicated")
    first_setsy = setsy([2, 3, 4, 5, 6, 7])
    logger.info("confirm its contents")
    print("b:", first_setsy)
    logger.info("is fourth_setsy a subset of first_setsy?")
    c = fourth_setsy.is_not_subset(first_setsy)
    logger.info("and look: it knows why")
    print("result of a.is_not_subset(b): ", c)
    if c:
        print("a is not a subset of b")

    print("is not superset attempt")
    fourth_setsy = setsy([1, 2, 3])
    print("a:", fourth_setsy)
    first_setsy = setsy([2, 3, 4, 5, 6, 7])
    print("b:", first_setsy)
    c = first_setsy.is_not_superset(fourth_setsy)
    print("result of b.is_not_superset(a): ", c)
    if c:
        print("b is not a superset of a")

    print("is not subset attempt")
    fourth_setsy = setsy([2, 3])
    print("a:", fourth_setsy)
    first_setsy = setsy([2, 3, 4, 5, 6, 7])
    print("b:", first_setsy)
    c = fourth_setsy.is_not_subset(first_setsy)
    print("result of a.is_not_subset(b): ", c)
    print("a is not a subset of b") if c else print("a is a subset of b")

    print("is not superset attempt")
    fourth_setsy = setsy([2, 3])
    print("a:", fourth_setsy)
    first_setsy = setsy([2, 3, 4, 5, 6, 7])
    print("b:", first_setsy)
    c = first_setsy.is_not_superset(fourth_setsy)
    print("result of b.is_not_superset(a): ", c)
    if c:
        print("b is not a superset of a")

    print("is not subset attempt")
    fourth_setsy = setsy([2, 3])
    print("a:", fourth_setsy)
    first_setsy = setsy([2])
    print("b:", first_setsy)
    c = fourth_setsy.is_not_subset(first_setsy)
    print("result of a.is_not_subset(b): ", c)
    print("a is not a subset of b") if c else print("a is a subset of b")

    print("is not superset attempt")
    fourth_setsy = setsy([2, 3])
    print("a:", fourth_setsy)
    first_setsy = setsy([2])
    print("b:", first_setsy)
    c = first_setsy.is_not_superset(fourth_setsy)
    print("result of b.is_not_superset(a): ", c)
    if c:
        print("b is not a superset of a")
